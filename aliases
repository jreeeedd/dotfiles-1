# prezto plugin
alias x=unarchive

# gource pictures
alias gource="gource --user-image-dir ~/gource-img/ --multi-sampling --dont-stop"

# Convert receipts pictures to a readable date format
facture() {
  local file
  file="$1"
  shift
  convert "$file" -resize 1000 "$(echo "$file" | sed -E "s/^[^0-9]+([0-9]{4})([0-9]{2})([0-9]{2})[^.]+/\1-\2-\3 $*/")" && rm "$file"
}

alias rot13="tr '[A-Za-z]' '[N-ZA-Mn-za-m]'"
alias du="du -h"

# git OP
alias g=git
alias ga='git add'
alias gap='git add -p'
alias gb='git branch'
alias gba='git branch -a'
alias gc='git commit -v'
alias gca='git commit -v -a'
alias gcl='git config --list'
alias gclean='git reset --hard && git clean -dfx'
alias gcm='git checkout master'
alias gcd='git checkout develop'
alias gco='git checkout'
alias gcount='git shortlog -sn'
alias gcp='git cherry-pick'
alias gd='git diff'
alias gdc='git diff --cached'
alias gg='git ls-files | grep'
alias gk='gitk --all --branches'
alias gl='git pull'
alias glg='git log --stat --max-count=5'
alias glgg='git log --graph --max-count=5'
alias glgga='git log --graph --decorate --all'
alias glo='git log --oneline'
alias glu='git submodule foreach git pull origin master'
alias gm='git merge'
alias gmt='git mergetool --no-prompt'
alias gp='git push'
alias gpoat='git push origin --all && git push origin --tags'
alias gr='git remote'
alias grba='git rebase --abort'
alias grbc='git rebase --continue'
alias grbi='git rebase -i'
alias grh='git reset HEAD'
alias grhh='git reset HEAD --hard'
alias grmv='git remote rename'
alias grrm='git remote remove'
alias grset='git remote set-url'
alias grt='cd $(git rev-parse --show-toplevel || echo ".")'
alias grup='git remote update'
alias grv='git remote -v'
alias gst='git status -s'
alias gsta='git stash'
alias gstaa='git stash apply'
alias gstd='git stash drop'
alias gstl='git stash list'
alias gstp='git stash pop'
alias gsts='git stash show --text'
alias gup='git pull --rebase'
alias gwc='git whatchanged -p --abbrev-commit --pretty=medium'

# search for commits where a specific file was added (argument)
alias gfa='git log --diff-filter=A --'
alias gfd='git log --diff-filter=D --'
alias gfm='git log --diff-filter=M --'

# Git flow
alias gf='git-flow'
alias gfi='git-flow init'
alias gfid='git-flow init -d'

alias gff='git-flow feature'
alias gffv='git-flow feature -v'
alias gffco='git-flow feature checkout'
alias gffd='git-flow feature diff'
alias gfff='git-flow feature finish'
alias gffp='git-flow feature publish'
alias gffl='git-flow feature pull'
alias gffr='git-flow feature rebase'
alias gffs='git-flow feature start'
alias gfft='git-flow feature track'

alias gfr='git-flow release'
alias gfrv='git-flow release -v'
alias gfrf='git-flow release finish'
alias gfrp='git-flow release publish'
alias gfrs='git-flow release start'
alias gfrt='git-flow release track'

alias gfh='git-flow hotfix'
alias gfhv='git-flow hotfix -v'
alias gfhf='git-flow hotfix finish'
alias gfhp='git-flow hotfix publish'
alias gfhs='git-flow hotfix start'

# Remove bad git aliases
unalias gs 2>/dev/null

# some more ls aliases
alias ll='ls -alhF'
alias la='ls -A'
alias l='ls -CFlh'

# cd aliases
#alias -='cd -'
alias ..='cd ..'
alias ...='cd ../..'
alias 1='cd -'
alias 2='cd -2'
alias 3='cd -3'
alias 4='cd -4'
alias 5='cd -5'
alias 6='cd -6'
alias 7='cd -7'
alias 8='cd -8'
alias 9='cd -9'

# Update function
function update_dotfiles() {
  printf '\033[0;34m%s\033[0m\n' "Updating dotfiles"
  cd ~/dotfiles
  if git pull --rebase origin $(git rev-parse --abbrev-ref HEAD)
  then
    echo -e "\e[32m    .___      __    _____.__.__                 "
    echo "  __| _/_____/  |__/ ____\__|  |   ____   ______"
    echo " / __ |/  _ \   __\   __\|  |  | _/ __ \ /  ___/"
    echo "/ /_/ (  <_> )  |  |  |  |  |  |_\  ___/ \___ \ "
    echo "\____ |\____/|__|  |__|  |__|____/\___  >____  >"
    echo "     \/                               \/     \/ "
    echo -e "\e[34mdofiles updated and/or is at the current version.\e[0m"
  else
    echo -e "\e[31mThere was an error updating...\e[0m"
  fi
  cd -
}

if which source-highlight > /dev/null 2>&1; then
  alias ccat="source-highlight --out-format=esc -o STDOUT -i"
fi

export EDITOR=vim
export VISUAL=vim
if [[ -x /usr/libexec/java_home ]]; then
  export JAVA_HOME=$(/usr/libexec/java_home)
fi

if which pyenv-virtualenv-init > /dev/null 2>&1; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)";
fi

export TERM=xterm-256color
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# moving between words
#bindkey "OD" forward-word
#bindkey "OC:" backward-word
